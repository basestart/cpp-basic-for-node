#include <iostream>
using namespace std;
// 常量是固定值， 在程序执行期间不会改变， 这些固定的值， 又叫做字面量
// c++ const 和define的差别
/*
1. 编译器处理方式
define- 在预处理阶段进行替换
const- 在编译时确定其值

2. 类型检查
define- 无类型， 不进行类型安全检查， 可能产生意想不到的错误
const- 有数据星星， 编译时， 会进行类型检查

3. 内存空间
define- 不分配内存， 给出的是立即数， 有多少次使用就进行多少次替换， 在内存中会有多个拷贝， 消耗内存大
const- 在静态存储区中分配空间， 在程序运行过程中内存中只有一个拷贝

4. 其他
在编译时， 编译器通常部位const变量分配存储空间， 而是将他们保存在符号表中， 这使得它成为一个编译期间的常量， 没有存储和读内存的操作， 效率更高
宏替换只是替换， 不做计算， 不做表达式求解

宏定义的作用范围仅限于当前文件
默认状态下，const对象只在文件内有效， 在锁哥文件中， 出现同名const， 等同于在不用文件中分贝定义了独立变量
如果想在多个文件中共享const， 必须添加extern字段
 
*/ 

int main () {
	
	return 0;
}
